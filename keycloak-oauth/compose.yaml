version: '1'

services:
  reverse-proxy:
    # The official v3 Traefik docker image
    image: traefik:v3.0
    # Enables the web UI and tells Traefik to listen to docker
    command: 
      - '--api.insecure=true' 
      - '--providers.docker'
#      - '--entrypoints.http.http.redirections.entrypoint.to=https'
#      - '--entrypoints.http.http.redirections.entrypoint.scheme=https'
#      - '--entrypoints.https=true'
#      - '--entrypoints.https.address=:443'
#      - '--certificatesResolvers.letsencrypt.acme.email=me@outlook.com'
#      - '--certificatesResolvers.letsencrypt.acme.storage=/etc/traefik/acme.json'
#      - '--certificatesResolvers.letsencrypt.acme.httpChallenge.entryPoint=http'
      - '--log=true'
      - '--log.format=json'
#      - '--log.filePath=/var/log/traefik/traefik.log'
      - '--log.level=DEBUG'
    ports:
      # The HTTP port
      - "80:80"
      # The Web UI (enabled by --api.insecure=true)
      - "8080:8080"
    volumes:
      # So that Traefik can listen to the Docker events
      - /var/run/docker.sock:/var/run/docker.sock
    networks:
      - my-network
  keycloak:
    image: quay.io/keycloak/keycloak:latest
    ports:
      - 9080:8080
    depends_on:
      - db
    environment:
      - "KC_HEALTH_ENABLED=true"
      - "KC_METRICS_ENABLED=true"
      - "KC_DB=postgres"
      - "KC_DB_URL=jdbc:postgresql://db:5432/keycloak"
      - "KC_DB_USERNAME=postgres"
      - "KC_DB_PASSWORD=postgres"
      - "KC_HOSTNAME=http://keycloak.psn.local"
      - "KEYCLOAK_ADMIN=admin"
      - "KEYCLOAK_ADMIN_PASSWORD=admin"
    command: start-dev --import-realm
    volumes:
      - ./sampleRealm.json:/opt/keycloak/data/import/sampleRealm.json
    networks:
      - my-network
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.keycloak.rule=Host(`keycloak.psn.local`)"
#      - "traefik.http.routers.keycloak.entrypoints=https"
#      - "traefik.http.routers.keycloak.tls=true"
#      - "traefik.http.routers.keycloak.tls.certresolver=letsencrypt"
  db:
    image: postgres
    restart: always
    user: postgres
    environment:
      POSTGRES_PASSWORD: postgres
      POSTGRES_USER:
      POSTGRES_DB: resume
    ports:
      - 5433:5432
    volumes:
      - ./schema.sql:/docker-entrypoint-initdb.d/schema.sql
    networks:
      - my-network
  spike-one:
    image: spike-one:latest
    ports:
      - 8081:8080
    labels:
      - "traefik.http.routers.dockerized-app.rule=Host(`spike-one.psn.local`)"
    networks:
      - my-network
  spike-two:
    image: spike-two:latest
    ports:
      - 8082:8080
    labels:
      - "traefik.http.routers.dockerized-app.rule=Host(`spike-two.psn.local`)"
    networks:
      - my-network

networks:
  my-network:
    driver: bridge
    name: my-network